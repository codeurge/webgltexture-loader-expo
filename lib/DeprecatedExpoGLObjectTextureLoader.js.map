{"version":3,"sources":["../src/DeprecatedExpoGLObjectTextureLoader.js"],"names":["neverEnding","Promise","available","NativeModules","ExponentGLObjectManager","createObjectAsync","warned","ExpoGLObjectTextureLoader","objIds","WeakMap","input","console","log","texture","exglObjId","get","destroyObjectAsync","delete","config","JSON","stringify","gl","exglCtxId","__exglCtxId","disposed","dispose","promise","then","WebGLTexture","set","width","height","WebGLTextureLoaderAsyncHashCache","priority","globalRegistry","add"],"mappings":";;;;;;;;;;AACA;;AAIA;;AACA;;;;;;;;;;;;AAEA,IAAMA,cAAc,IAAIC,OAAJ,CAAY,YAAM,CAAE,CAApB,CAApB;;AAEA,IAAMC,YAAY,CAAC,EACjBC,2BAAcC,uBAAd,IACAD,2BAAcC,uBAAd,CAAsCC,iBAFrB,CAAnB;;AAKA,IAAIC,SAAS,KAAb;;IAEMC,yB;;;;;;;;;;;;;;4NAKJC,M,GAAwC,IAAIC,OAAJ,E;;;;;4BAEhCC,K,EAAY;AAClB,UAAI,CAACR,SAAD,IAAc,CAACI,MAAnB,EAA2B;AACzBA,iBAAS,IAAT;AACAK,gBAAQC,GAAR,CACE,oIADF;AAGD;AACD,aAAOV,aAAa,QAAOQ,KAAP,yCAAOA,KAAP,OAAiB,QAArC;AACD;;;mCAEcG,O,EAAuB;AACpC,UAAMC,YAAY,KAAKN,MAAL,CAAYO,GAAZ,CAAgBF,OAAhB,CAAlB;AACA,UAAIC,SAAJ,EAAe;AACbX,mCAAcC,uBAAd,CAAsCY,kBAAtC,CAAyDF,SAAzD;AACD;AACD,WAAKN,MAAL,CAAYS,MAAZ,CAAmBJ,OAAnB;AACD;;;8BAESK,M,EAAgB;AACxB;AACA,aAAOC,KAAKC,SAAL,CAAeF,MAAf,CAAP;AACD;;;gCAEWA,M,EAAgB;AAAA;;AAAA,UAClBG,EADkB,GACX,IADW,CAClBA,EADkB;AAE1B;;AAF0B,UAGLC,SAHK,GAGSD,EAHT,CAGlBE,WAHkB;;AAI1B,UAAIC,WAAW,KAAf;AACA,UAAMC,UAAU,SAAVA,OAAU,GAAM;AACpBD,mBAAW,IAAX;AACD,OAFD;AAGA,UAAME,UAAUvB,2BAAcC,uBAAd,CAAsCC,iBAAtC,CAAwD;AACtEiB,4BADsE;AAEtET,iBAASK;AAF6D,OAAxD,EAGbS,IAHa,CAGR,iBAAmB;AAAA,YAAhBb,SAAgB,SAAhBA,SAAgB;;AACzB,YAAIU,QAAJ,EAAc,OAAOxB,WAAP;AACd;AACA,YAAMa,UAAU,IAAIe,YAAJ,CAAiBd,SAAjB,CAAhB;AACA,eAAKN,MAAL,CAAYqB,GAAZ,CAAgBhB,OAAhB,EAAyBC,SAAzB;AACA,YAAMgB,QAAQ,CAAd;AACA,YAAMC,SAAS,CAAf;AACA;AACA,eAAO,EAAElB,gBAAF,EAAWiB,YAAX,EAAkBC,cAAlB,EAAP;AACD,OAZe,CAAhB;AAaA,aAAO,EAAEL,gBAAF,EAAWD,gBAAX,EAAP;AACD;;;;EApDqCO,oD;;AAAlCzB,yB,CAGG0B,Q,GAAW,CAAC,G;;;AAoDrBC,mCAAeC,GAAf,CAAmB5B,yBAAnB;;kBAEeA,yB","file":"DeprecatedExpoGLObjectTextureLoader.js","sourcesContent":["//@flow\nimport {\n  globalRegistry,\n  WebGLTextureLoaderAsyncHashCache\n} from \"webgltexture-loader\";\nimport { NativeModules } from \"react-native\";\nimport Expo from \"expo\";\n\nconst neverEnding = new Promise(() => {});\n\nconst available = !!(\n  NativeModules.ExponentGLObjectManager &&\n  NativeModules.ExponentGLObjectManager.createObjectAsync\n);\n\nlet warned = false;\n\nclass ExpoGLObjectTextureLoader extends WebGLTextureLoaderAsyncHashCache<\n  Object\n> {\n  static priority = -200;\n\n  objIds: WeakMap<WebGLTexture, number> = new WeakMap();\n\n  canLoad(input: any) {\n    if (!available && !warned) {\n      warned = true;\n      console.log(\n        \"webgltexture-loader-expo: ExponentGLObjectManager.createObjectAsync is not available. Make sure to use the correct version of Expo\"\n      );\n    }\n    return available && typeof input === \"object\";\n  }\n\n  disposeTexture(texture: WebGLTexture) {\n    const exglObjId = this.objIds.get(texture);\n    if (exglObjId) {\n      NativeModules.ExponentGLObjectManager.destroyObjectAsync(exglObjId);\n    }\n    this.objIds.delete(texture);\n  }\n\n  inputHash(config: Object) {\n    // JSON.stringify is a quick way to hash the config object\n    return JSON.stringify(config);\n  }\n\n  loadNoCache(config: Object) {\n    const { gl } = this;\n    // $FlowFixMe\n    const { __exglCtxId: exglCtxId } = gl;\n    let disposed = false;\n    const dispose = () => {\n      disposed = true;\n    };\n    const promise = NativeModules.ExponentGLObjectManager.createObjectAsync({\n      exglCtxId,\n      texture: config\n    }).then(({ exglObjId }) => {\n      if (disposed) return neverEnding;\n      // $FlowFixMe\n      const texture = new WebGLTexture(exglObjId);\n      this.objIds.set(texture, exglObjId);\n      const width = 0;\n      const height = 0;\n      // ^ unfortunately there is no way to retrieve these\n      return { texture, width, height };\n    });\n    return { promise, dispose };\n  }\n}\n\nglobalRegistry.add(ExpoGLObjectTextureLoader);\n\nexport default ExpoGLObjectTextureLoader;\n"]}