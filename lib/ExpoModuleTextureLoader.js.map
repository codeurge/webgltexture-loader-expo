{"version":3,"sources":["../src/ExpoModuleTextureLoader.js"],"names":["neverEnding","Promise","hash","module","uri","localAsset","asset","Asset","fromModule","downloadAsync","then","remoteAssetCache","remoteAsset","i","lastIndexOf","ext","slice","key","resolve","promise","all","success","failure","Image","getSize","width","height","FileSystem","documentDirectory","cache","size","localUri","localFile","loadAsset","startsWith","ExpoModuleTextureLoader","objIds","WeakMap","input","gl","disposed","dispose","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","WebGLTextureLoaderAsyncHashCache","globalRegistry","add"],"mappings":"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","file":"ExpoModuleTextureLoader.js","sourcesContent":["//@flow\nimport {\n  globalRegistry,\n  WebGLTextureLoaderAsyncHashCache\n} from \"webgltexture-loader\";\nimport { Image } from \"react-native\";\nimport {Asset, FileSystem} from \"expo\";\nimport md5 from \"./md5\";\n\nconst neverEnding = new Promise(() => {});\n\ntype AssetModel = {\n  width: number,\n  height: number,\n  uri: string,\n  localUri: string\n};\n\nconst hash = (module: number | { uri: string }) =>\n  typeof module === \"number\" ? module : module.uri;\n\nconst localAsset = (module: number) => {\n  const asset = Asset.fromModule(module);\n  return asset.downloadAsync().then(() => asset);\n};\n\nconst remoteAssetCache = {};\n\nconst remoteAsset = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = Promise.all([\n    new Promise((success, failure) =>\n      Image.getSize(uri, (width, height) => success({ width, height }), failure)\n    ),\n    FileSystem.downloadAsync(\n      uri,\n      FileSystem.documentDirectory + `ExponentAsset-${key}${ext}`,\n      {\n        cache: true\n      }\n    )\n  ]).then(([size, asset]) => ({ ...size, uri, localUri: asset.uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nconst localFile = (uri: string) => {\n  const i = uri.lastIndexOf(\".\");\n  const ext = i !== -1 ? uri.slice(i) : \".jpg\";\n  const key = md5(uri);\n  if (key in remoteAssetCache) {\n    return Promise.resolve(remoteAssetCache[key]);\n  }\n  const promise = new Promise((success, failure) =>\n    Image.getSize(uri, (width, height) => success({ width, height }), failure)\n  ).then(size => ({ ...size, uri, localUri: uri }));\n  remoteAssetCache[key] = promise;\n  return promise;\n};\n\nexport const loadAsset = (module: number | { uri: string }): Promise<AssetModel> =>\n  typeof module === \"number\"\n    ? localAsset(module)\n    : module.uri.startsWith(\"file:\") || module.uri.startsWith(\"data:\")\n      ? localFile(module.uri)\n      : remoteAsset(module.uri);\n\nclass ExpoModuleTextureLoader extends WebGLTextureLoaderAsyncHashCache<\n  number | { uri: string }\n> {\n  objIds: WeakMap<WebGLTexture, number> = new WeakMap();\n\n  canLoad(input: any) {\n    return (\n      typeof input === \"number\" ||\n      (input && typeof input === \"object\" && typeof input.uri === \"string\")\n    );\n  }\n\n  inputHash(module: *) {\n    return typeof module === \"number\" ? module : module.uri;\n  }\n\n  loadNoCache(module: *) {\n    const { gl } = this;\n    let disposed = false;\n    const dispose = () => {\n      disposed = true;\n    };\n    const promise = loadAsset(module).then(asset => {\n      if (disposed) return neverEnding;\n      const { width, height } = asset;\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      // $FlowFixMe\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        width,\n        height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        asset\n      );\n      return { texture, width, height };\n    });\n    return { promise, dispose };\n  }\n}\n\nglobalRegistry.add(ExpoModuleTextureLoader);\n\nexport default ExpoModuleTextureLoader;\n"]}